{
    "contents" : "#' Generate table with AidData destination/receiver IDs\n#'\n#' A data frame with 234 observations on the following 8 variables.\n#' Used internally by the \\code{getAid()} function.\nlookuptable.orgID <- function(x) {\n  # get data & convert\n  res <- httr::GET(\"http://api.aiddata.org/data/destination/organizations\")\n  res <- httr::content(res)\n  # get result in data.frame shape\n  res <- do.call(rbind, lapply(res$hits, rbind))\n  res <- data.frame(res)\n  # convert column classes\n  res[, c(\"name\", \"iso3\", \"iso2\", \"type_name\")] <- apply(res[, c(\"name\", \"iso3\", \"iso2\", \"type_name\")],2,as.character)\n  res[, c(\"id\", \"oecdCode\", \"type_id\")] <- apply(res[, c(\"id\", \"oecdCode\", \"type_id\")], 2, function(x) as.numeric(lapply(x, as.numeric)))  \n  # sort results\n  lookup.table <- dplyr::arrange(res, name)\n  save(lookup.table, file = \"../data/lookup-table.rda\")\n  # return(lookup.table)\n}\n\n#' Extract variable information from parsed JSON / list input\n#' \n#' Used internally by the \\code{getAid} function\nextract_aid <- function(x) {\n  # Not all projects have info on all variables, so 'ifelse' captures \n  # missing variables and replace them with NA\n  data.frame(\"project_id\" = ifelse(is.null(x$project_id), NA, x$project_id), \n             \"recipient\" = ifelse(is.null(x$transactions[[1]]$tr_receiver_country$name), NA, x$transactions[[1]]$tr_receiver_country$name),\n             \"recipient_iso3\" = ifelse(is.null(x$transactions[[1]]$tr_receiver_country$iso3), NA, x$transactions[[1]]$tr_receiver_country$iso3),\n             \"donor\" = ifelse(is.null(x$transactions[[1]]$tr_funding_org$name), NA, x$transactions[[1]]$tr_funding_org$name),\n             \"donor_iso3\" = ifelse(is.null(x$transactions[[1]]$tr_funding_org$iso3), NA, x$transactions[[1]]$tr_funding_org$iso3),\n             \"year\" = ifelse(is.null(x$transactions[[1]]$tr_year), NA, x$transactions[[1]]$tr_year),\n             \n             # Project name information\n             \"title\" = ifelse(is.null(x$title), NA, x$title),\n             \"name\" = ifelse(is.null(x$sectors3[[1]]$name), NA,x$sectors3[[1]]$name), \n             \n             # Financial information\n             \"tr_constant_value\" = ifelse(is.null(x$transactions[[1]]$tr_constant_value), NA, x$transactions[[1]]$tr_constant_value),\n             \"tr_nominal_value\" = ifelse(is.null(x$transactions[[1]]$tr_nominal_value), NA, x$transactions[[1]]$tr_nominal_value), \n             \n             # Sector information\n             \"sector3_code\" = ifelse(is.null(x$transactions[[1]]$tr_sector3$code), NA, x$transactions[[1]]$tr_sector3$code), \n             \"sector5_code\" = ifelse(is.null(x$transactions[[1]]$tr_sector5$code), NA, x$transactions[[1]]$tr_sector5$code),\n             \n             \n             stringsAsFactors = FALSE)\n}\n\n#' Download AidData Project Information\n#' \n#' Downloads all aid projects in the AidData 3.0 database for one or several \n#' countries, parses resulting JSON files, and returns a data frame with the aid\n#' projects.\n#' \n#' @param rec Character vector of recipient countries (ISO-2 country codes, e.g.\n#'   \"AO\" for Angola). Donor organizations not yet implemented.\n#' @param donor Character vector of donor countries (ISO-2 country codes, e.g. \n#'   \"US\"). Donor organizations not yet implemented.\n#' @param start First year of data.\n#' @param end Last year of data.\n#' @param progressbar Default TRUE. Show a progress bar?\n#'   \n#' @details This function downloads information on all aid projects between \n#'   \\code{start} and \\code{end} years, either to the recipient country \n#'   specified in \\code{rec} or from the country \\code{donor}. Downloading data \n#'   for a large number of countries over a long period of time can result in a \n#'   large number of projects and may take long; the use of the \n#'   \\code{progressbar} option is recommended.\n#'   \n#'   Not all information available through AidData is provided; due to \n#'   performance reasons the functions is restricted to the following variables\n#'   \n#'   \\itemize{ \\item{\\code{project_id:} }{Unique AidData project ID} \n#'   \\item{\\code{recipient: } }{Recipient name, character} \n#'   \\item{\\code{recipient_iso3:} }{Recipient ISO-3 character string} \n#'   \\item{\\code{donor:} }{Donor name, character string} \n#'   \\item{\\code{donor_iso3:} }{Donor ISO-3 character string. \\code{NA} if IGO, \n#'   NGO, or no official counry} \\item{\\code{year:} }{Year of commitment} \n#'   \\item{\\code{title: }}{Project title} \\item{\\code{name: }}{Sector name} \n#'   \\item{\\code{tr_constant_value: }}{Value of transaction in constant USD2009}\n#'   \\item{\\code{tr_nominal_value: }}{Value of transaction, as reported by the \n#'   donor in the reported currency} \\item{\\code{sector3_code: }}{AidData's \n#'   3-digit sector code} \\item{\\code{sector5_code: }}{AidData's 5-digit sector \n#'   code} }\n#'   \n#' @return Data frame in which one row represents one project.\n#'   \n#' @examples\n#' \\dontrun{\n#'  # Download and store all aid projects in Liberia by all donors \n#'  # between 2006 and 2007 and don't show a progress bar.\n#'  aid_projects <- getAid(rec = \"LR\", start = 2006, end = 2007, progressbar = FALSE)\n#' }\n#' \n#' @references\n#' \n#' Tierney, Michael J., Daniel L. Nielson, Darren G. Hawkins, J. Timmons \n#' Roberts, Michael G. Findley, Ryan M. Powers, Bradley Parks, Sven E. Wilson, \n#' and Robert L. Hicks. 2011. More Dollars than Sense: Refining Our Knowledge of\n#' Development Finance Using AidData. \\emph{World Development} 39 (11): \n#' 1891-1906.\n#' \n#' \\url{http://aiddata.org} \n#'  \n#' \\url{http://aiddata.org/user-guide}\n#' @seealso \\code{\\link{getGIS}}\n#'   \ngetAid <- function(rec = NULL, donor = NULL, start = NULL, end = NULL, progressbar = TRUE) {\n  if(is.null(rec) & is.null(donor)) stop(\"No donor or recipient country given. Please provide at least one recipient or donor country.\")\n  \n  # lookup recipients organization 'ro' id\n  ro <- subset(lookup.table, iso2 %in% rec, select = id)\n  ro <- paste(ro[, 1], collapse = \",\")\n  \n  # create years lookup\n  years <- start:end\n  years <- paste(years, collapse = \",\")\n  \n  # put together query options, based on user input\n  query.opts <- list(ro = ro,\n                     src = \"1,2,3,4,5,6,7,8,9,3249668\", # all sources\n                     # src = \"8,9\",\n                     t = \"1\", # commitments only\n                     y = years, \n                     from = 0,\n                     size = 50) \n  \n  # obtain project count with given options\n  count <- httr::content(httr::GET(\"http://api.aiddata.org/aid/project\", query = query.opts))$project_count\n  \n  # AidData API limits queries to 50 projects per page. We need to determine the number of \n  # pages we must loop through.\n  targetNumOfPages <- floor(count / 50)\n  currentPage <- 0 \n  from <- 0\n  \n  # initialize empty project data frame\n  project_list <- data.frame(matrix(nrow=count, ncol=length(extract_aid(NULL))))\n  \n  if(progressbar) {\n    writeLines(paste(\"Downloading AidData for\", count, \"aid projects...\" ))\n    pb <- txtProgressBar(min = 0, max = ifelse(targetNumOfPages > 1, targetNumOfPages, 1), \n                         style = 3, width = 60)\n  }\n  \n  for(i in currentPage:targetNumOfPages) {\n    \n    if(progressbar) setTxtProgressBar(pb, i)\n    \n    from <- i * 50\n    query.opts$from <- from\n    result <- httr::GET(\"http://api.aiddata.org/aid/project\", query = query.opts)\n    result <- httr::content(result)\n    \n    # build output data frame\n    res.df <- lapply(result[[\"items\"]], extract_aid)\n    \n    res.df <- data.table::rbindlist(res.df)\n      \n    if(i != targetNumOfPages) { \n      project_list[(from+1):(from+50), ] <- res.df\n    } else {\n      project_list[(from+1):(count), ] <- res.df # last page\n    }\n\n  }\n  \n  names(project_list) <- names(res.df)\n  if(progressbar) close(pb)\n  return(project_list)\n}\n\n#' Download GIS Information for AidData Projects\n#' \n#' Downloads geographic information for aid projects in the AidData 3.0 \n#' database, parses resulting JSON files, and returns a data frame with the \n#' point information for the projects.\n#' \n#' @param rec Character vector of recipient countries (ISO-2 country codes, e.g.\n#'   \"AO\" for Angola). Donor organizations not yet implemented.\n#' @param donor Character vector of donor countries (ISO-2 country codes, e.g. \n#'   \"US\"). Donor organizations not yet implemented.\n#' @param start First year of data.\n#' @param end Last year of data.\n#' @param proj.info Logical. Defaults to \\code{FALSE}. Should complete project \n#'   information be downloaded?\n#'   \n#' @details This function downloads all point information for aid projects in \n#'   country \\code{rec} between \\code{start} and \\code{end} years. Since many \n#'   projects are implemented in different locations, the number of point \n#'   locations typically exceeds the number of projects.\n#'   \n#'   The API GIS returns a set of basic information:\n#'   \n#'   \\itemize{ \\item{\\code{project_id: }}{Unique AidData project ID} \n#'   \\item{\\code{score: }}{Not entirely clear (Precision Code?)} \n#'   \\item{\\code{loc_geo_name: }}{Name of the geo-referenced point, e.g.\n#'   province name, town, village} \\item{\\code{lat: }}{Latitude} \n#'   \\item{\\code{long: }}{Longitude} }\n#'   \n#'   If \\code{proj.info = TRUE}, \\code{getGIS} calls \\code{getAid} to match \n#'   point information with project information. See \\code{\\link{getAid}} \n#'   documentation for list of variables returned by \\code{getAid}. Since this \n#'   procedure downloads a lot of unnecessary information (only a fraction of \n#'   all aid projects are geocoded), this process may take a while.\n#'   \n#' @return Data frame in which one row represents one point information of an \n#'   aid project.\n#'   \n#' @references\n#' \n#' Tierney, Michael J., Daniel L. Nielson, Darren G. Hawkins, J. Timmons \n#' Roberts, Michael G. Findley, Ryan M. Powers, Bradley Parks, Sven E. Wilson, \n#' and Robert L. Hicks. 2011. More Dollars than Sense: Refining Our Knowledge of\n#' Development Finance Using AidData. \\emph{World Development} 39 (11): \n#' 1891-1906.\n#' \n#' Strandow, Daniel, Michael Findley, Daniel Nielson, and Joshua Powell. 2011. \n#' \\emph{The UCDP-AidData codebook on Geo-referencing Foreign Aid.} Version 1.1.\n#' Uppsala Conflict Data Program. Uppsala, Sweden: Uppsala University.\n#' \n#' \\url{http://aiddata.org}\n#' \n#' \\url{http://aiddata.org/user-guide}\n#' \n#' @examples\n#' \n#' \\dontrun{\n#'  # Download and store GIS information for aid projects in Angola between\n#'  # 2005 and 2007; get all project information for these projects\n#'  aidprojects_gis <- getGIS(rec = \"AO\", start = 2005, end = 2007, proj.info = TRUE)\n#' }\n#' \n#' @seealso \\code{\\link{getAid}}\n\ngetGIS <- function(rec = NULL, donor = NULL, start = NULL, end = NULL, proj.info = FALSE) {\n  \n  # lookup recipients organization 'ro' id\n  ro <- subset(lookup.table, iso2 %in% rec, select = id)\n  ro <- paste(ro[, 1], collapse = \",\")\n  \n  # create years lookup\n  years <- start:end\n  years <- paste(years, collapse = \",\")\n  \n  # put together query options, based on user input\n  query.opts <- list(ro = ro,\n                     src = \"1,2,3,4,5,6,7,3249668\", # all sources\n                     t = \"1\", # commitments only\n                     y = years, \n                     from = 0, \n                     size = 50)\n  result <- httr::GET(\"http://api.aiddata.org/gis/aid\", query = query.opts)\n  result <- httr::content(result)\n  \n  res.df <- lapply(result$items, function(x) data.frame(project_id = x$fields$loc_project_id,\n                                                        score = x$`_score`,\n                                                        loc_geo_name = x$fields$loc_geo_name,\n                                                        lat = x$fields$loc_point$lat,\n                                                        long = x$fields$loc_point$lon,\n                                                        stringsAsFactors = FALSE))\n  res.df <- data.table::rbindlist(res.df)\n  \n  if(proj.info) {\n    proj_info_df <- getAid(rec = rec, donor = donor, start = start, end = end)\n    res.df <- merge(as.data.frame(res.df), proj_info_df, by = \"project_id\", all.x = TRUE)\n  }\n  \n  return(res.df)\n}\n\n#' Lookup table for countries and organizations in AidData\n#' \n#' A data frame with AidData's IDs for all 234 countries and organizations. Used \n#' internally by \\code{aiddata} functions.\n#' \n#' @format A dataset with 234 observations on 8 variables:\n#' \\itemize{\n#'    \\item{\\code{project_id:} }{Unique AidData project ID}\n#'    \\item{\\code{name: }}{Organization or country name (character string)}\n#'    \\item{\\code{iso3: }}{ISO-3 character code (if available)}\n#'    \\item{\\code{iso2: }}{ISO-2 character code (if available)}\n#'    \\item{\\code{oecdCode: }}{OECD organizational code}\n#'    \\item{\\code{type_id: }}{Unclear (not provided in the documentation)}\n#'    \\item{\\code{type_name: }}{Unclear (not provided in the documentation)}\n#'    \\item{\\code{parent_agency_id: }}{Unclear (not provided in the documentation)}\n#' }\n#'\n#'@source\n#'\n#'\\url{http://aiddata.org}\n\"lookup.table\"\n\n#' Browse AidData Project Details\n#' \n#' Opens the AidData web page with information on the given project. For\n#' interactive use only.\n#' \n#' @param id The unique AidData project ID (given in the \\code{project_id} field\n#'   of other \\code{aiddata} functions)\n#'   \n#' @details Quick lookup function to browse individual project IDs. Opens a\n#'   browser window with detail informationed from on the given project on the\n#'   AidData website. This can be useful if more information about the project\n#'   is required, e.g. the long description which isn't downloaded by\n#'   \\code{getAid}. Wrapper around \\code{httr}'s \\code{\\link{BROWSE}}\n#'   function. Only works interactively.\n#'   \n#' @examples \n#' \n#' \\dontrun{\n#' \n#' browse_aid(50225207) # Opens AidData project page an Irish education project in Uganda.\n#' }   \n#'   \n#' @seealso \\code{\\link{BROWSE}}\nbrowse_aid <- function(id = NULL) {\n  \n  if(!is.null(id)) {\n    BROWSE(paste0(\"http://aiddata.org/dashboard#/project/\", id))\n  } else {\n    stop(\"Please provide AidData project ID\")\n  }\n  \n}\n\n\n",
    "created" : 1411679145798.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1064333507",
    "id" : "411F9CBE",
    "lastKnownWriteTime" : 1411934022,
    "path" : "C:/Users/FelixHaass/Dropbox/Work/aiddata/R/aiddataAPI_functions.R",
    "project_path" : "R/aiddataAPI_functions.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}